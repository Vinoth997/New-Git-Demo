package ExtentReports;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;

import io.github.bonigarcia.wdm.WebDriverManager;

public class ExtentReportsDemo {
	
	public WebDriver driver;
	
	public ExtentHtmlReporter htmlreporter;
	public com.aventstack.extentreports.ExtentReports extent;
	public ExtentTest test;
	
	@BeforeTest
	public void setExtent() {
		htmlreporter = new ExtentHtmlReporter(System.getProperty("user.dir")+"/test-output/myReport.html");

		htmlreporter.config().setDocumentTitle("Automation Report");
		htmlreporter.config().setReportName("Functional Report");
		htmlreporter.config().setTheme(Theme.DARK);

		extent = new com.aventstack.extentreports.ExtentReports();
		extent.attachReporter(htmlreporter);

		extent.setSystemInfo("Hostname", "LocalHost");
		extent.setSystemInfo("Os", "Windows 10");
		extent.setSystemInfo("Tester Name", "Vinoth Kumar");
		extent.setSystemInfo("Browser", "Chrome Browser");
		
	}
	
	@AfterTest
	public void endReport() {
		extent.flush();
	}
	
	@BeforeMethod()
	public void setup() {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.manage().window().maximize();
		driver.get("http://the-internet.herokuapp.com/checkboxes");
	}
	
	@Test
	public void titleValidation() {
		test = extent.createTest("Title_Test");
		String title = driver.getTitle();
		Assert.assertEquals(title, "The Internet");
	}
	
	@Test
	public void logoValidation() {
		test = extent.createTest("Logo_Test");
		boolean status = driver.findElement(By.xpath("//img[@src='/assets/img/newUI/virujh_logo.svg']")).isDisplayed();
		Assert.assertTrue(status);
	}
	
	@Test
	public void login() {
		test = extent.createTest("Login_Test");
		Assert.assertTrue(true);
	}
	
	@AfterMethod
	public void tearDown(ITestResult result) throws IOException {
		if (result.getStatus() == ITestResult.FAILURE) {
			test.log(Status.FAIL, "TEST CASE FAILED IS " + result.getName()); // to add name in extent report
			test.log(Status.FAIL, "TEST CASE FAILED IS " + result.getThrowable()); // to add error/exception in extent report
			String screenshotPath = ExtentReportsDemo.getScreenshot(driver, result.getName());
			test.addScreenCaptureFromPath(screenshotPath);// adding screen shot
		} else if (result.getStatus() == ITestResult.SKIP) {
			test.log(Status.SKIP, "Test Case SKIPPED IS " + result.getName());
		}
		else if (result.getStatus() == ITestResult.SUCCESS) {
			test.log(Status.PASS, "Test Case PASSED IS " + result.getName());
		}
		driver.quit();
	}

	public static String getScreenshot(WebDriver driver, String screenshotName) throws IOException {
		String dateName = new SimpleDateFormat("yyyyMMddhhmmss").format(new Date());
		TakesScreenshot ts = (TakesScreenshot) driver;
		File source = ts.getScreenshotAs(OutputType.FILE);

		// after execution, you could see a folder "FailedTestsScreenshots" under src folder
		String destination = System.getProperty("user.dir") + "/Screenshots/" + screenshotName + dateName + ".png";
		File finalDestination = new File(destination);
		FileUtils.copyFile(source, finalDestination);
		return destination;
	}
}
